{"version":3,"sources":["components/UserMessage/UserMessage.module.css","components/common/Button/Button.module.css","components/NavToggle/NavToggleBody/NavToggleBody.module.css","components/common/Input/Input.module.css","components/common/Checkbox/Checkbox.module.css","components/UserMessage/UserMessage.tsx","components/Todo/Todo.tsx","components/common/Input/Input.tsx","components/common/Button/Button.tsx","components/SayHi/SayHi.tsx","components/common/Checkbox/Checkbox.tsx","components/PreJunior/PreJunior.tsx","components/common/EditableSpan/EditableSpan.tsx","components/common/Select/Select.tsx","components/common/Radio/Radio.tsx","reducers/homeWorkReducer.ts","components/Junior/Junior.tsx","utils/localStorage.ts","components/JuniorAdvanced/JuniorAdvanced.tsx","components/NavToggle/NavToggleTitle/NavToggleTitle.tsx","components/NavToggle/NavToggleBody/NavMenu/NavMenu.tsx","components/NavToggle/NavToggleBody/NavToggleBody.tsx","components/NavToggle/NavToggle.tsx","components/Header/Header.tsx","App.tsx","serviceWorker.ts","reducers/store.ts","index.tsx","components/NavToggle/NavToggleTitle/NavToggleTitle.module.css","components/NavToggle/NavToggleBody/NavMenu/NavMenu.module.css"],"names":["module","exports","UserMessage","props","className","styles","wrap","colLeft","imgWrap","src","alt","name","colRight","message","Todo","onClick","filterTasks","tasks","map","task","key","id","priority","removeTask","Input","type","value","autoFocus","onChange","e","currentTarget","onKeyPress","charCode","onBlur","input","error","Button","button","style","danger","standard","text","SayHi","useState","names","setNames","sayHi","alert","addNewName","newName","v1","length","n","Checkbox","checked","checkbox","PreJunior","setTasks","filter","setFilter","filteredTasks","inputValue","setInputValue","inputValueTask4","setInputValueTask4","setChecked","newTasks","newValue","EditableSpan","editMode","setEditMode","onDoubleClick","Select","console","log","valueSelected","values","v","label","Radio","onRadioChange","target","initialState","age","Junior","setValue","choices","selectValue","setSelectValue","radioValue","setRadioValue","people","useSelector","state","homework","dispatch","useDispatch","stateAsString","JSON","stringify","localStorage","setItem","saveState","defaultState","getItem","parse","restoreState","p","arrayData","JuniorAdvanced","NavToggleTitle","collapsed","accordionTitle","accordionTitleOpen","mtInner","menuStr","str1","str2","str3","title","NavMenu","nav","to","link","activeClassName","active","NavToggleBody","accordionBody","accordionBodyOpen","NavToggle","Header","navCollapsed","setNavCollapsed","App","path","render","Boolean","window","location","hostname","match","rootReducer","combineReducers","action","sort","a","b","store","createStore","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.1ba1ccf1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"UserMessage_wrap__3epS5\",\"colLeft\":\"UserMessage_colLeft__3ba-e\",\"imgWrap\":\"UserMessage_imgWrap__ack3N\",\"colRight\":\"UserMessage_colRight__3O8Sk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__r4otx\",\"danger\":\"Button_danger__3xP9o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"accordionBody\":\"NavToggleBody_accordionBody__3R2GP\",\"accordionBodyOpen\":\"NavToggleBody_accordionBodyOpen__2nkVc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__2s7n7\",\"error\":\"Input_error__2XMiX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Checkbox_input__j4x9U\"};","import React from 'react';\r\nimport styles from './UserMessage.module.css';\r\n\r\nexport type UserMessageType = {\r\n\tname: string\r\n\tmessage: string\r\n}\r\n\r\nconst UserMessage = (props: UserMessageType) => {\r\n\treturn (\r\n\t\t\t<div className={styles.wrap}>\r\n\t\t\t\t<div className={styles.colLeft}>\r\n\t\t\t\t\t<div className={styles.imgWrap}>\r\n\t\t\t\t\t\t<img src='https://placeimg.com/50/50/tech' alt={props.name}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={styles.colRight}>\r\n\t\t\t\t\t<h3>{props.name}</h3>\r\n\t\t\t\t\t<p>{props.message}</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default UserMessage;","import React from 'react';\r\n\r\nexport type PriorityType = 'all' | 'high' | 'middle' | 'low'\r\n\r\nexport type  TasksType = {\r\n\tid: number,\r\n\tname: string,\r\n\tpriority: PriorityType\r\n}\r\n\r\nexport type TodoPropsType = {\r\n\ttasks: Array<TasksType>\r\n\tfilterTasks: (value: PriorityType) => void\r\n\tremoveTask: (id: number) => void\r\n}\r\n\r\nconst Todo = (props: TodoPropsType) => {\r\n\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button onClick={() => props.filterTasks('all')}>All</button>\r\n\t\t\t\t\t<button onClick={() => props.filterTasks('high')}>High</button>\r\n\t\t\t\t\t<button onClick={() => props.filterTasks('middle')}>Middle</button>\r\n\t\t\t\t\t<button onClick={() => props.filterTasks('low')}>Low</button>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t{props.tasks.map((task) =>\r\n\t\t\t\t\t\t\t<li key={task.id}>\r\n\t\t\t\t\t\t\t\t<b>{task.name}</b>\r\n\t\t\t\t\t\t\t\t<small><i> {task.priority} </i></small>\r\n\t\t\t\t\t\t\t\t<button onClick={() => props.removeTask(task.id)}>delete</button>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Todo;","import React, {ChangeEvent, KeyboardEvent} from 'react';\r\nimport styles from './Input.module.css';\r\n\r\n\r\nconst Input = (props: InputType) => {\r\n\r\n\tconst onInputChange = (e: ChangeEvent<HTMLInputElement>) => props.onChange(e.currentTarget.value)\r\n\r\n\tconst onKeyInputPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n\t\tif (e.charCode === 13) {\r\n\t\t\tprops.onKeyPress()\r\n\t\t}\r\n\t}\r\n\r\n\tconst onBlur = () => {\r\n\t\tif (props.onBlur) {\r\n\t\t\tprops.onBlur()\r\n\t\t}\r\n\t}\r\n\r\n\treturn <input\r\n\t\t\ttype='text'\r\n\t\t\tvalue={props.value}\r\n\t\t\tautoFocus={props.autoFocus}\r\n\t\t\tonChange={onInputChange}\r\n\t\t\tonKeyPress={onKeyInputPressHandler}\r\n\t\t\tonBlur={onBlur}\r\n\t\t\tclassName={`${styles.input} ${props.error && styles.error}`}/>\r\n}\r\n\r\nexport default Input;\r\n\r\n\r\n// TYPES\r\nexport type InputType = {\r\n\tvalue: string\r\n\tonChange: (newValue: string) => void\r\n\tonKeyPress: () => void\r\n\terror?: boolean\r\n\tautoFocus?: boolean\r\n\tonBlur?: () => void\r\n}","import React from 'react';\r\nimport styles from './Button.module.css';\r\n\r\n\r\nconst Button = (props: ButtonPropsType) => {\r\n\tconst onClickHandler = () => {\r\n\t\tprops.onClick()\r\n\t}\r\n\treturn (\r\n\t\t\t<button\r\n\t\t\t\t\tonClick={onClickHandler}\r\n\t\t\t\t\tclassName={`${styles.button} ${props.style === 'danger' && styles.danger} ${props.style === 'standard' && styles.standard}`}>\r\n\t\t\t\t{props.text}</button>\r\n\t)\r\n}\r\n\r\nexport default Button;\r\n\r\n\r\n// TYPES\r\ntype ButtonPropsType = {\r\n\ttext: string\r\n\tonClick: () => void\r\n\tstyle?: 'danger' | 'standard'\r\n}","import React, {ChangeEvent, useState} from 'react';\r\nimport {v1} from 'uuid';\r\nimport Input from '../common/Input/Input';\r\nimport Button from '../common/Button/Button';\r\n\r\nconst SayHi = (props: SayHiType) => {\r\n\r\n\tlet [names, setNames] = useState<Array<NameType>>([])\r\n\r\n\tfunction sayHi() {\r\n\t\tif (props.value) {\r\n\t\t\talert(`Hi, ${props.value}`)\r\n\t\t\tprops.onChange('')\r\n\t\t}\r\n\t}\r\n\r\n\tconst addNewName = () => {\r\n\t\tlet newName: NameType = {id: v1(), name: props.value}\r\n\t\tnames = [...names, newName]\r\n\t\tsetNames([...names])\r\n\t}\r\n\r\n\tconst onKeyInputPressHandler = () => {\r\n\t\tsayHi()\r\n\t\taddNewName()\r\n\t}\r\n\r\n\tconst onClickBtnHandler = () => {\r\n\t\tsayHi()\r\n\t\taddNewName()\r\n\t}\r\n\r\n\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Input onChange={props.onChange} onKeyPress={onKeyInputPressHandler} value={props.value}/>\r\n\t\t\t\t<Button text={'Say Hi'} onClick={onClickBtnHandler}/>\r\n\r\n\t\t\t\t<div>( {names.length} )</div>\r\n\t\t\t\t{names.map(n => <p key={n.id}>{n.name} </p>)}\r\n\t\t\t</>\r\n\t)\r\n}\r\n\r\nexport default SayHi;\r\n\r\n\r\n// TYPES\r\nexport type SayHiType = {\r\n\tvalue: string\r\n\tonChange: (newValue: string) => void\r\n}\r\n\r\nexport type NameType = {\r\n\tid: string\r\n\tname: string\r\n}","import React, {ChangeEvent} from 'react';\r\nimport styles from './Checkbox.module.css';\r\n\r\nconst Checkbox = (props: InputType) => {\r\n\r\n\tconst onCheckboxChange = (e: ChangeEvent<HTMLInputElement>) => props.onChange(e.currentTarget.checked)\r\n\r\n\treturn <input type='checkbox' checked={props.checked} onChange={onCheckboxChange} className={styles.checkbox}/>\r\n}\r\n\r\nexport default Checkbox;\r\n\r\n\r\n// TYPES\r\nexport type InputType = {\r\n\tchecked: boolean\r\n\tonChange: (checked: boolean) => void\r\n}","import React, {useState} from 'react';\r\nimport UserMessage from '../UserMessage/UserMessage';\r\nimport Todo, {PriorityType, TasksType} from '../Todo/Todo';\r\nimport SayHi from '../SayHi/SayHi';\r\nimport Checkbox from '../common/Checkbox/Checkbox';\r\nimport Input from '../common/Input/Input';\r\nimport Button from '../common/Button/Button';\r\n\r\nconst PreJunior = () => {\r\n\tconst [tasks, setTasks] = useState<Array<TasksType>>([\r\n\t\t{id: 1, name: 'Paddle Surf', priority: 'middle'},\r\n\t\t{id: 2, name: 'Learn JS', priority: 'high'},\r\n\t\t{id: 3, name: 'Learn React', priority: 'high'},\r\n\t\t{id: 4, name: 'Swim', priority: 'middle'},\r\n\t\t{id: 5, name: 'Sleep', priority: 'low'},\r\n\t\t{id: 6, name: 'Buy bread', priority: 'low'},\r\n\t\t{id: 7, name: 'Do something', priority: 'low'}\r\n\t])\r\n\r\n\tlet [filter, setFilter] = useState<PriorityType>('all')\r\n\r\n\t// Task2: remove task\r\n\tfunction removeTask(id: number) {\r\n\t\tlet newTasks = tasks.filter(task => task.id !== id)\r\n\t\tsetTasks([...newTasks])\r\n\t}\r\n\r\n\t// Task 2: filter tasks by priority\r\n\tlet filteredTasks = tasks;\r\n\tif (filter === 'high') {\r\n\t\tfilteredTasks = tasks.filter(task => task.priority === filter)\r\n\t}\r\n\tif (filter === 'middle') {\r\n\t\tfilteredTasks = tasks.filter(task => task.priority === filter)\r\n\t}\r\n\tif (filter === 'low') {\r\n\t\tfilteredTasks = tasks.filter(task => task.priority === filter)\r\n\t}\r\n\r\n\tfunction changeFilter(value: PriorityType) {\r\n\t\tsetFilter(value)\r\n\t}\r\n\r\n\r\n\t// Task 3: SayHi State\r\n\tconst [inputValue, setInputValue] = useState<string>('')\r\n\tconst changeInputValue = (newValue: string) => setInputValue(newValue)\r\n\r\n\t// Task 4: demo state for a standard input\r\n\tconst [inputValueTask4, setInputValueTask4] = useState<string>('')\r\n\tconst [checked, setChecked] = useState<boolean>(true)\r\n\tconst onChangeInputTask4 = (newValue: string) => setInputValueTask4(newValue)\r\n\tconst onKeyPressInputTask4 = () => setInputValueTask4('');\r\n\tconst onCheckboxChange = (checked: boolean) => setChecked(checked)\r\n\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h1>PreJunior</h1>\r\n\t\t\t\t<h2>Task 1: Message block</h2>\r\n\t\t\t\t<UserMessage\r\n\t\t\t\t\t\tname={'Katia'}\r\n\t\t\t\t\t\tmessage={'How are you?'}/>\r\n\r\n\t\t\t\t<br/>\r\n\t\t\t\t<br/>\r\n\t\t\t\t<br/>\r\n\r\n\t\t\t\t<h2>Task 2: Filter an array</h2>\r\n\t\t\t\t<Todo\r\n\t\t\t\t\t\ttasks={filteredTasks}\r\n\t\t\t\t\t\tfilterTasks={changeFilter}\r\n\t\t\t\t\t\tremoveTask={removeTask}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<br/>\r\n\t\t\t\t<br/>\r\n\t\t\t\t<br/>\r\n\r\n\t\t\t\t<h2>Task 3: Say Hi</h2>\r\n\t\t\t\t<SayHi\r\n\t\t\t\t\t\tvalue={inputValue}\r\n\t\t\t\t\t\tonChange={changeInputValue}/>\r\n\r\n\t\t\t\t<h2>Task 4: Standard Components</h2>\r\n\r\n\t\t\t\t<Checkbox checked={checked} onChange={onCheckboxChange}/>\r\n\t\t\t\t<Input value={inputValueTask4} onChange={onChangeInputTask4} onKeyPress={onKeyPressInputTask4} error={true}/>\r\n\t\t\t\t<Button text={'I am a demo btn'} onClick={() => alert('Hello')} style={'danger'}/>\r\n\r\n\t\t\t\t<br/>\r\n\t\t\t\t<br/>\r\n\t\t\t\t<br/>\r\n\r\n\t\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default PreJunior;","import React, {useState} from 'react';\r\nimport Input from '../Input/Input';\r\n\r\nconst EditableSpan = (props: PropsType) => {\r\n\tconst [editMode, setEditMode] = useState(false)\r\n\r\n\tconst onDoubleClick = () => setEditMode(true)\r\n\r\n\tconst onBlur = () => {\r\n\t\tprops.onChange(props.value)\r\n\t\tsetEditMode(false)\r\n\t}\r\n\r\n\tconst onKeyPress = () => {\r\n\t\tprops.onChange(props.value)\r\n\t\tsetEditMode(false)\r\n\t}\r\n\r\n\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{\r\n\t\t\t\t\teditMode\r\n\t\t\t\t\t\t\t? <Input\r\n\t\t\t\t\t\t\t\t\tvalue={props.value}\r\n\t\t\t\t\t\t\t\t\tautoFocus={true}\r\n\t\t\t\t\t\t\t\t\tonBlur={onBlur}\r\n\t\t\t\t\t\t\t\t\tonChange={props.onChange}\r\n\t\t\t\t\t\t\t\t\tonKeyPress={onKeyPress}/>\r\n\r\n\t\t\t\t\t\t\t: <span onDoubleClick={onDoubleClick}>{props.value}</span>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default EditableSpan;\r\n\r\n// TYPES\r\ntype PropsType = {\r\n\tvalue: string\r\n\tonChange: (newValue: string) => void\r\n}","import React, {ChangeEvent} from 'react';\r\n\r\nconst Select = (props: PropsType) => {\r\n\r\n\tconst onSelectChange = (e: ChangeEvent<HTMLSelectElement>) => {\r\n\t\tprops.onChange(e.currentTarget.value)\r\n\t\tconsole.log(e.currentTarget.value)\r\n\t}\r\n\treturn (\r\n\t\t\t<select onChange={onSelectChange} value={props.valueSelected}>\r\n\t\t\t\t{props.values.map((v) => <option key={v.id} value={v.value}>{v.label}</option>)}\r\n\t\t\t</select>\r\n\t)\r\n}\r\n\r\nexport default Select;\r\n\r\n// TYPES\r\ntype PropsType = {\r\n\tvalues: ValuesType[]\r\n\tvalueSelected: string\r\n\tonChange: (val: string) => void\r\n}\r\n\r\nexport type ValuesType = {\r\n\tid: string\r\n\tvalue: string\r\n\tlabel: string\r\n}","import React, {ChangeEvent} from 'react';\r\n\r\nconst Radio = (props: PropsType) => {\r\n\r\n\tconst onRadioChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tprops.onChange(e.target.value)\r\n\t\tconsole.log(e.target.value)\r\n\t}\r\n\r\n\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t{props.values.map((v) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<label key={v.id}>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\t\t\t\t\tname={props.name}\r\n\t\t\t\t\t\t\t\t\t\tvalue={v.value}\r\n\t\t\t\t\t\t\t\t\t\tonChange={onRadioChange}\r\n\t\t\t\t\t\t\t\t\t\tchecked={props.valueSelected === v.value}/>{v.label}\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t)\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Radio;\r\n\r\n// TYPES\r\ntype PropsType = {\r\n\tname: string\r\n\tvalues: ValuesType[]\r\n\tvalueSelected: string\r\n\tonChange: (val: string) => void\r\n}\r\n\r\nexport type ValuesType = {\r\n\tid: string\r\n\tvalue: string\r\n\tlabel: string\r\n}","const initialState: Array<InitialStateType> = [\r\n\t{id: '1', name: 'Katia', age: 12},\r\n\t{id: '2', name: 'Denis', age: 20},\r\n\t{id: '3', name: 'Toni', age: 16},\r\n\t{id: '4', name: 'Alisa', age: 23},\r\n]\r\n\r\nexport const hwReducer = (state: Array<InitialStateType> = initialState, action: ActionsType) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'SORT-UP-NAMES':\r\n\t\t\treturn [...state.sort((a, b) => 0 - (a.name > b.name ? -1 : 1))]\r\n\t\tcase 'SORT-DOWN-NAMES':\r\n\t\t\treturn [...state.sort((a, b) => 0 - (a.name > b.name ? 1 : -1))]\r\n\t\tcase 'CHECK-AGE':\r\n\t\t\treturn [...state.filter((v) => v.age >= 18)]\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport const sortUpNamesAC = (arrayData: InitialStateType[]) => ({type: 'SORT-UP-NAMES', arrayData} as const)\r\nexport const sortDownNamesAC = (arrayData: InitialStateType[]) => ({type: 'SORT-DOWN-NAMES', arrayData} as const)\r\nexport const checkAgeAC = (arrayData: InitialStateType[]) => ({type: 'CHECK-AGE', arrayData} as const)\r\n\r\n// TYPES\r\nexport type InitialStateType = {\r\n\tid: string\r\n\tname: string\r\n\tage: number\r\n}\r\n\r\nexport type ActionsType = SortUpNamesType | SortDownNamesType | checkAgeType\r\n\r\nexport type SortUpNamesType = ReturnType<typeof sortUpNamesAC>\r\nexport type SortDownNamesType = ReturnType<typeof sortDownNamesAC>\r\nexport type checkAgeType = ReturnType<typeof checkAgeAC>","import React, {useState} from 'react';\r\nimport EditableSpan from '../common/EditableSpan/EditableSpan';\r\nimport {restoreState, saveState} from '../../utils/localStorage';\r\nimport Button from '../common/Button/Button';\r\nimport Select, {ValuesType} from '../common/Select/Select';\r\nimport Radio from '../common/Radio/Radio';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../reducers/store';\r\nimport {checkAgeAC, InitialStateType, sortDownNamesAC, sortUpNamesAC} from '../../reducers/homeWorkReducer';\r\n\r\nconst Junior = () => {\r\n\r\n\t// task 6\r\n\tconst startValue = 'double click';\r\n\tconst [value, setValue] = useState(startValue)\r\n\tconst onEditableSpanValueChange = (newValue: string) => setValue(newValue)\r\n\tconst saveData = () => saveState<StateType>('saveState', {value: value})\r\n\tconst restoreData = () => restoreState<StateType>('saveState', {value: startValue})\r\n\r\n\t// task 7\r\n\r\n\tconst choices: ValuesType[] = [\r\n\t\t{id: '1', value: 'play-football', label: 'Play Football'},\r\n\t\t{id: '2', value: 'learn-react', label: 'Learn React'},\r\n\t\t{id: '3', value: 'yoga', label: 'Yoga'},\r\n\t\t{id: '4', value: 'gym', label: 'GYM'}\r\n\t]\r\n\tconst [selectValue, setSelectValue] = useState(choices[0].value)\r\n\tconst onSelectChange = (newValue: string) => setSelectValue(newValue)\r\n\r\n\tconst [radioValue, setRadioValue] = useState('')\r\n\tconst onRadioChange = (newValue: string) => setRadioValue(newValue)\r\n\r\n\t// task 8\r\n\tconst people = useSelector<AppRootStateType, InitialStateType[]>(state => state.homework)\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst sortUp = () => dispatch(sortUpNamesAC(people))\r\n\tconst sortDown = () => dispatch(sortDownNamesAC(people))\r\n\tconst checkAge = () => dispatch(checkAgeAC(people))\r\n\r\n\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h1>Junior</h1>\r\n\t\t\t\t<h2>Task 6: Editable Span</h2>\r\n\t\t\t\t<EditableSpan value={value} onChange={onEditableSpanValueChange}/>\r\n\r\n\t\t\t\t<Button text={'Save Data'} onClick={saveData}/>\r\n\t\t\t\t<Button text={'Restore Data'} onClick={restoreData}/>\r\n\r\n\t\t\t\t<br/>\r\n\t\t\t\t<br/>\r\n\t\t\t\t<br/>\r\n\r\n\t\t\t\t<h2>Task 7: Select and Radio</h2>\r\n\t\t\t\t<h3>Select</h3>\r\n\t\t\t\t<Select values={choices} valueSelected={selectValue} onChange={onSelectChange}/>\r\n\r\n\t\t\t\t<h3>Radio</h3>\r\n\t\t\t\t<Radio name={'rightChoice'} values={choices} valueSelected={radioValue} onChange={onRadioChange}/>\r\n\r\n\t\t\t\t<br/>\r\n\t\t\t\t<br/>\r\n\t\t\t\t<br/>\r\n\r\n\t\t\t\t<h2>Task 8: Reducer - sort up/down, filter</h2>\r\n\t\t\t\t{people.map((p) => <p key={p.id}>{p.name} --- {p.age}</p>)}\r\n\t\t\t\t<Button text={'Names Sort (UP)'} onClick={sortUp}/>\r\n\t\t\t\t<Button text={'Names Sort (DOWN)'} onClick={sortDown}/>\r\n\t\t\t\t<Button text={'Show People 18+'} onClick={checkAge}/>\r\n\t\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Junior;\r\n\r\n// TYPES\r\nexport type StateType = {\r\n\tvalue: string\r\n}\r\n\r\n","export function saveState<T>(key: string, state: T) {\r\n\tconst stateAsString = JSON.stringify(state);\r\n\tlocalStorage.setItem(key, stateAsString)\r\n}\r\n\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n\tconst stateAsString = localStorage.getItem(key);\r\n\tif (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\r\n\treturn defaultState;\r\n}\r\n\r\n/* How to use it:\r\ntype StateType = {\r\n\tx: string\r\n\ty: number\r\n}\r\nsaveState<StateType>('test', {x: 'A', y: 1});\r\nconst state: StateType = restoreState<StateType>(\"test\", {x: \"\", y: 0);*/\r\n","import React from 'react';\r\nimport styles from './JuniorAdvanced.module.css';\r\n\r\nconst JuniorAdvanced = () => {\r\n  return (\r\n      <div>PreJunior</div>\r\n  )\r\n}\r\n\r\nexport default JuniorAdvanced;","import React from 'react';\r\nimport styles from './NavToggleTitle.module.css';\r\n\r\ntype AccordionTitleType = {\r\n\ttitle: string\r\n\tonChange: (data: boolean) => void\r\n\tcollapsed: boolean\r\n}\r\n\r\nconst NavToggleTitle = (props: AccordionTitleType) => {\r\n\treturn (\r\n\t\t\t<div onClick={() => props.onChange(props.collapsed)}\r\n\t\t\t\t\t className={props.collapsed ? `${styles.accordionTitle}` : `${styles.accordionTitle} ${styles.accordionTitleOpen}`}\r\n\t\t\t>\r\n\t\t\t\t<div className={styles.mtInner}>\r\n\t\t\t\t\t<div className={styles.menuStr}>\r\n\t\t\t\t\t\t<span className={styles.str1}></span>\r\n\t\t\t\t\t\t<span className={styles.str2}></span>\r\n\t\t\t\t\t\t<span className={styles.str3}></span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={styles.title}>{props.title}</div>\r\n\t\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default NavToggleTitle;","import React from 'react';\nimport styles from './NavMenu.module.css';\nimport {NavLink} from 'react-router-dom';\n\nexport type NavType = {\n\tcollapsed: boolean\n\tonChange: (data: boolean) => void\n}\n\nconst NavMenu = (props: NavType) => {\n\n\tconst onClick = () => props.onChange(props.collapsed)\n\treturn (\n\t\t\t<nav className={styles.nav}>\n\t\t\t\t<p>\n\t\t\t\t\t<NavLink to=\"/prejunior\" className={styles.link} activeClassName={styles.active}\n\t\t\t\t\t\t\t\t\t onClick={onClick}>PreJunior</NavLink></p>\n\t\t\t\t<p><NavLink to=\"/junior\" className={styles.link} activeClassName={styles.active}\n\t\t\t\t\t\t\t\t\t\tonClick={onClick}>Junior</NavLink></p>\n\t\t\t\t<p><NavLink to=\"/junior-advanced\" className={styles.link} activeClassName={styles.active}\n\t\t\t\t\t\t\t\t\t\tonClick={onClick}>Junior+</NavLink></p>\n\t\t\t</nav>\n\t)\n}\n\nexport default NavMenu;","import React from 'react';\r\nimport styles from './NavToggleBody.module.css';\r\nimport NavMenu from './NavMenu/NavMenu';\r\n\r\ntype AccordionBodyType = {\r\n\tcollapsed: boolean\r\n\tonChange: (data: boolean) => void\r\n}\r\n\r\nconst NavToggleBody = (props: AccordionBodyType) => {\r\n\r\n\treturn (\r\n\t\t\t<div\r\n\t\t\t\t\tclassName={props.collapsed\r\n\t\t\t\t\t\t\t? `${styles.accordionBody}`\r\n\t\t\t\t\t\t\t: `${styles.accordionBody} ${styles.accordionBodyOpen}`}>\r\n\r\n\t\t\t\t<NavMenu\r\n\t\t\t\t\t\tcollapsed={props.collapsed}\r\n\t\t\t\t\t\tonChange={() => props.onChange(props.collapsed)}/>\r\n\t\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default NavToggleBody;","import React from 'react';\r\nimport NavToggleTitle from './NavToggleTitle/NavToggleTitle';\r\nimport NavToggleBody from './NavToggleBody/NavToggleBody';\r\n\r\ntype AccordionType = {\r\n\ttitle: string;\r\n\tcollapsed: boolean;\r\n\tonChange: (data: boolean) => void;\r\n}\r\n\r\nconst NavToggle = (props: AccordionType) => {\r\n\r\n\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<NavToggleTitle\r\n\t\t\t\t\t\ttitle={props.title}\r\n\t\t\t\t\t\tonChange={() => props.onChange(props.collapsed)}\r\n\t\t\t\t\t\tcollapsed={props.collapsed}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<NavToggleBody\r\n\t\t\t\t\t\tcollapsed={props.collapsed}\r\n\t\t\t\t\t\tonChange={() => props.onChange(props.collapsed)}/>\r\n\t\t\t</>\r\n\t)\r\n}\r\n\r\nexport default NavToggle;","import NavToggle from '../NavToggle/NavToggle';\r\nimport React, {useState} from 'react';\r\n\r\nconst Header = () => {\r\n\tconst [navCollapsed, setNavCollapsed] = useState<boolean>(true)\r\n\tconst onChange = (value: boolean) => setNavCollapsed(!value)\r\n\r\n\treturn (\r\n\t\t\t<header>\r\n\t\t\t\t{/*show nav menu*/}\r\n\t\t\t\t<NavToggle title={'Menu'} collapsed={navCollapsed} onChange={onChange}/>\r\n\t\t\t</header>\r\n\t)\r\n}\r\n\r\nexport default Header;","import React from 'react';\nimport './App.css';\nimport {Route} from 'react-router-dom';\nimport PreJunior from './components/PreJunior/PreJunior';\nimport Junior from './components/Junior/Junior';\nimport JuniorAdvanced from './components/JuniorAdvanced/JuniorAdvanced';\nimport Header from './components/Header/Header';\n\n\nfunction App() {\n\n\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Header/>\n\t\t\t\t{/*to build nav menu route*/}\n\t\t\t\t<Route path='/prejunior' render={() => <PreJunior/>}/>\n\t\t\t\t<Route path='/junior' render={() => <Junior/>}/>\n\t\t\t\t<Route path='/junior-advanced' render={() => <JuniorAdvanced/>}/>\n\t\t\t</div>\n\t)\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {hwReducer} from './homeWorkReducer';\r\nimport {combineReducers, createStore} from 'redux';\r\n\r\nconst rootReducer = combineReducers({\r\n\thomework: hwReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer);\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {store} from './reducers/store';\n\nReactDOM.render(\n\t\t<React.StrictMode>\n\t\t\t<Provider store={store}>\n\t\t\t\t<HashRouter>\n\t\t\t\t\t<App/>\n\t\t\t\t</HashRouter>\n\t\t\t</Provider>\n\t\t</React.StrictMode>,\n\t\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"accordionTitle\":\"NavToggleTitle_accordionTitle__1ZMdX\",\"str1\":\"NavToggleTitle_str1__169dM\",\"str2\":\"NavToggleTitle_str2__2MBmL\",\"str3\":\"NavToggleTitle_str3__3jBZf\",\"mtInner\":\"NavToggleTitle_mtInner__XgfjI\",\"menuStr\":\"NavToggleTitle_menuStr__2Zi-_\",\"title\":\"NavToggleTitle_title__3c1iR\",\"accordionTitleOpen\":\"NavToggleTitle_accordionTitleOpen__2O-L-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavMenu_nav__2TUNw\",\"link\":\"NavMenu_link__3beiQ\",\"active\":\"NavMenu_active__3VTOq\"};"],"sourceRoot":""}